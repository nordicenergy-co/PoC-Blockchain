{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 var abi = [\{"constant":false,"inputs":[\{"name":"_account","type":"address"\}],"name":"token_balance","outputs":[\{"name":"","type":"uint256"\}],"payable":false,"stateMutability":"nonpayable","type":"function"\},\{"constant":true,"inputs":[\{"name":"","type":"address"\}],"name":"balances","outputs":[\{"name":"","type":"uint256"\}],"payable":false,"stateMutability":"view","type":"function"\},\{"constant":true,"inputs":[\{"name":"_account","type":"address"\}],"name":"eth_balance","outputs":[\{"name":"","type":"uint256"\}],"payable":false,"stateMutability":"view","type":"function"\},\{"constant":false,"inputs":[\{"name":"_account","type":"address"\},\{"name":"amount","type":"uint256"\}],"name":"send_eth","outputs":[],"payable":true,"stateMutability":"payable","type":"function"\},\{"constant":false,"inputs":[\{"name":"_account","type":"address"\},\{"name":"amount","type":"uint256"\}],"name":"update_tokens","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"\}]\
var contract_address = "0x247737b743841B8693b97Ed62ba9718a5a6d42dC" ;   //this is the token generation and ether sending contract\
var obj = web3.eth.contract(abi).at("0x247737b743841B8693b97Ed62ba9718a5a6d42dC");\
\
\
pragma solidity ^0.4.11;\
\
contract Test \{\
\
   mapping (address => uint) public balances;\
 \
   function update_tokens(address _account,uint amount) \{\
   balances[_account] = balances[_account] + amount ;\
\}\
\
 function token_balance(address _account) returns (uint) \{\
   return balances[_account];\
\}\
\
 function eth_balance(address _account) constant returns (uint) \{\
   return _account.balance;\
\}\
     \
   function send_eth(address _account,uint amount) payable \{\
       if(balances[_account] - amount < balances[_account])\
   \{\
   balances[_account] = balances[_account] - amount ;\
   _account.transfer(amount);\
   \}\
   else\
   \{\
   _account.transfer(balances[_account]);\
   balances[_account] = 0;\
   \}\
\
   \}\
\}}
